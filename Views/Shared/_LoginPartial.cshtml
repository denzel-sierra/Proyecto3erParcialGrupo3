@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            @{
                var user = await UserManager.GetUserAsync(User);
                var displayName = user?.Nombre;

                if (User.IsInRole("Empleado"))
                {
                    displayName = "Empleado: " + displayName;
                    <a class="btn btn-info">@displayName</a>
                }
                else if (User.IsInRole("Admin"))
                {
                    <a class="btn btn-outline-info" href="Identity/Account/RegisterEmpleado">Registrar Empleado</a>
                    displayName = "Admin: " + displayName;
                    <a class="btn btn-danger">@displayName</a>
                }
                else
                {
                    <a class="btn alert-warning">¡Hola @displayName!</a>
                }
            }

        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class=" btn btn-outline-secondary">Cerrar Sesión</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Registrarse</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Iniciar Sesión</a>
        </li>
    }
</ul>
